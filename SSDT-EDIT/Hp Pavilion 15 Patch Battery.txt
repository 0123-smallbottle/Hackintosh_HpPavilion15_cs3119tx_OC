
# method 16-bit
into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;

# 16-bit registers
into device label EC0 code_regex BADC,\s+16, replace_matched begin ADC0,8,ADC1,8, end;
into device label EC0 code_regex BFCC,\s+16, replace_matched begin FCC0,8,FCC1,8, end;
into device label EC0 code_regex MCUR,\s+16, replace_matched begin CUR0,8,CUR1,8, end;
into device label EC0 code_regex MBRM,\s+16, replace_matched begin BRM0,8,BRM1,8, end;
into device label EC0 code_regex MBCV,\s+16, replace_matched begin BCV0,8,BCV1,8, end;
into device label EC0 code_regex SMW0,\s+16 replace_matched begin MW00,8,MW01,8 end;

# fix 16-bit methods
into method label UPBI code_regex \(\^\^PCI0.LPCB.EC0.BADC, replaceall_matched begin (B1B2(\^\^PCI0.LPCB.EC0.ADC0,\^\^PCI0.LPCB.EC0.ADC1), end;
into method label UPBI code_regex \(\^\^PCI0.LPCB.EC0.BFCC, replaceall_matched begin (B1B2(\^\^PCI0.LPCB.EC0.FCC0,\^\^PCI0.LPCB.EC0.FCC1), end;
into method label UPBS code_regex \(\^\^PCI0.LPCB.EC0.MCUR, replaceall_matched begin (B1B2(\^\^PCI0.LPCB.EC0.CUR0,\^\^PCI0.LPCB.EC0.CUR1), end;
into method label UPBS code_regex \(\^\^PCI0.LPCB.EC0.MBRM, replaceall_matched begin (B1B2(\^\^PCI0.LPCB.EC0.BRM0,\^\^PCI0.LPCB.EC0.BRM1), end;
into method label CLRI code_regex \(\^\^LPCB.EC0.MBRM, replaceall_matched begin (B1B2(\^\^LPCB.EC0.BRM0,\^\^LPCB.EC0.BRM1), end;
into method label UPBS code_regex \(\^\^PCI0.LPCB.EC0.MBCV, replaceall_matched begin (B1B2(\^\^PCI0.LPCB.EC0.BCV0,\^\^PCI0.LPCB.EC0.BCV1), end;
into method label SMRD code_regex \(SMW0, replaceall_matched begin (B1B2(MW00,MW01), end;


# utility methods to read buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

# utility methods to write buffers from/to EC
into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

# >32-bit registers
into device label EC0 code_regex (SMD0,)\s+(256) replace_matched begin SMDX,%2,//%1%2 end;
into device label EC0 code_regex (FLD0,)\s+(64) replace_matched begin FLDX,%2,//%1%2 end;
into device label EC0 code_regex (FLD1,)\s+(128) replace_matched begin FLDY,%2,//%1%2 end;
into device label EC0 code_regex (FLD2,)\s+(192) replace_matched begin FLDZ,%2,//%1%2 end;
into device label EC0 code_regex (FLD3,)\s+(256) replace_matched begin FLDK,%2,//%1%2 end;

#Read
into method label SMRD code_regex \(FLD0, replaceall_matched begin (RECB(0x04,64), end;
into method label SMRD code_regex \(FLD1, replaceall_matched begin (RECB(0x04,128), end;
into method label SMRD code_regex \(FLD2, replaceall_matched begin (RECB(0x04,192), end;
into method label SMRD code_regex \(FLD3, replaceall_matched begin (RECB(0x04,256), end;
#Write
into method label SMWR code_regex Store\s?\(Arg3,\s?\SMD0\) replaceall_matched begin WECB(0x04,256,Arg3) end;
into method label SMWR code_regex Store\s?\(Arg3,\s?\SMW0\) replaceall_matched begin WECB(0x04,16,Arg3) end;

